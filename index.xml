<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure-wiki on </title>
    <link>https://azure-wings.github.io/wiki/</link>
    <description>Recent content in azure-wiki on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://azure-wings.github.io/wiki/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Abstract syntax</title>
      <link>https://azure-wings.github.io/wiki/notes/Abstract-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Abstract-syntax/</guid>
      <description>Abstract syntax formally express multiple components and subcomponents the program consists of.</description>
    </item>
    
    <item>
      <title>Alternating multilinear form</title>
      <link>https://azure-wings.github.io/wiki/notes/Alternating-multilinear-form/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Alternating-multilinear-form/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Artificial intelligence</title>
      <link>https://azure-wings.github.io/wiki/notes/Artificial-intelligence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Artificial-intelligence/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Basis</title>
      <link>https://azure-wings.github.io/wiki/notes/Basis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Basis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Books</title>
      <link>https://azure-wings.github.io/wiki/index/Books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Books/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Business administration</title>
      <link>https://azure-wings.github.io/wiki/index/Business-administration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Business-administration/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cauchy-Schwartz Inequality</title>
      <link>https://azure-wings.github.io/wiki/notes/Cauchy-Schwartz-inequality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Cauchy-Schwartz-inequality/</guid>
      <description>Theorem For any vectors $\mathbf{x},\mathbf{y} \in \mathbb{R}^n$, $$ |\mathbf{x}^\top\mathbf{y}| \leq |\mathbf{x}|_2|\mathbf{y}|_2.</description>
    </item>
    
    <item>
      <title>Computer architecture</title>
      <link>https://azure-wings.github.io/wiki/notes/Computer-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Computer-architecture/</guid>
      <description>Computer architecture is a set of rules and methods that describe the functionality, organisation, and implementation of computer systems.</description>
    </item>
    
    <item>
      <title>Computer science</title>
      <link>https://azure-wings.github.io/wiki/index/Computer-science/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Computer-science/</guid>
      <description>Computer science is the study of computation, automation, and information.</description>
    </item>
    
    <item>
      <title>Concrete syntax</title>
      <link>https://azure-wings.github.io/wiki/notes/Concrete-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Concrete-syntax/</guid>
      <description>Concrete syntax determines whether a certain string is a program or not.</description>
    </item>
    
    <item>
      <title>Coordinates</title>
      <link>https://azure-wings.github.io/wiki/notes/Coordinates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Coordinates/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cramer&#39;s rule</title>
      <link>https://azure-wings.github.io/wiki/notes/Cramers-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Cramers-rule/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Determinant</title>
      <link>https://azure-wings.github.io/wiki/notes/Determinant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Determinant/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dimension</title>
      <link>https://azure-wings.github.io/wiki/notes/Dimension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Dimension/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dual-mode operation</title>
      <link>https://azure-wings.github.io/wiki/notes/Dual-mode-operation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Dual-mode-operation/</guid>
      <description>Definition Dual-mode operation of a kernel consists of two modes: user mode and kernel mode.</description>
    </item>
    
    <item>
      <title>Economics</title>
      <link>https://azure-wings.github.io/wiki/index/Economics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Economics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Field</title>
      <link>https://azure-wings.github.io/wiki/notes/Field/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Field/</guid>
      <description>Definition A field $F$ is a set on which two operations $+$ (addition) and $\cdot$ (multiplication) are defined so that the followings hold.</description>
    </item>
    
    <item>
      <title>Fundamental theorem of linear algebra</title>
      <link>https://azure-wings.github.io/wiki/notes/Fundamental-theorem-of-linear-algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Fundamental-theorem-of-linear-algebra/</guid>
      <description></description>
    </item>
    
    <item>
      <title>HÃ¶lder&#39;s Inequality</title>
      <link>https://azure-wings.github.io/wiki/notes/H%C3%B6lders-inequality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/H%C3%B6lders-inequality/</guid>
      <description>Theorem For any vectors $\mathbf{x},\mathbf{y} \in \mathbb{R}^n$ and for any $p,q \geq 1$ such that $\frac{1}{p} + \frac{1}{q} = 1$, it holds that $$ |\mathbf{x}^\top\mathbf{y}| \leq \sum\limits_{i=1}^n|x_iy_i| \leq |\mathbf{x}|_p|\mathbf{y}|_q.</description>
    </item>
    
    <item>
      <title>Implementation of mode transfer</title>
      <link>https://azure-wings.github.io/wiki/notes/Implementation-of-mode-transfer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Implementation-of-mode-transfer/</guid>
      <description>Importance The context switch ( mode transfer) must be carefully crafted, and it relies on hardware support.</description>
    </item>
    
    <item>
      <title>Inner product</title>
      <link>https://azure-wings.github.io/wiki/notes/Inner-product/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Inner-product/</guid>
      <description>Definition An inner product on a vector space $V$ over a field is a function $\langle \cdot,\cdot\rangle:V^2 \to F$ that satisfies the followings:</description>
    </item>
    
    <item>
      <title>Isomorphism</title>
      <link>https://azure-wings.github.io/wiki/notes/Isomorphism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Isomorphism/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linear algebra</title>
      <link>https://azure-wings.github.io/wiki/notes/Linear-algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Linear-algebra/</guid>
      <description>Linear algebra is the branch of mathematics concerning linear equations, linear transformations (maps), and their representations in vector spaces and through matrices.</description>
    </item>
    
    <item>
      <title>Linear transformation</title>
      <link>https://azure-wings.github.io/wiki/notes/Linear-transformation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Linear-transformation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mathematical logic</title>
      <link>https://azure-wings.github.io/wiki/notes/Mathematical-logic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Mathematical-logic/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mathematics</title>
      <link>https://azure-wings.github.io/wiki/index/Mathematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Mathematics/</guid>
      <description>Mathematics is a study of abstract concepts such as numbers, quantities, spaces, changes, structures, etc.</description>
    </item>
    
    <item>
      <title>MIPS Assembly language</title>
      <link>https://azure-wings.github.io/wiki/notes/MIPS-Assembly-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/MIPS-Assembly-language/</guid>
      <description>Operands and operations MIPS Operands  Registers(2^5 = 32): $s0-$s7, $t0-$t9, $zero, $a0-$a3, $v0-$v1, $gp, $fp, $sp, $ra, $at Memory words (2^30): Memory[X]  MIPS assembly language    Category Instruction Example Meaning     Arithmetic Add add $s1, $s2, $s3 $s1 = $s2 + $s3    Subtraction sub $s1, $s2, $s3 $s1 = $s2 - $s3    Add immediate addi $s1, $s2, 20 $s1 = $s2 + 20   Data Transfer Load word lw $s1, 20($s2) $s1 = Memory[$s2 + 20]    Store word sw $s1, 20($s2) Memory[$s2 + 20] = $s1    Load half lh     Load half unsigned lhu     Store half sh     Load byte lb     Load byte unsigned lbu     Store byte sb     Load linked word ll     Store condition.</description>
    </item>
    
    <item>
      <title>Mode transfer</title>
      <link>https://azure-wings.github.io/wiki/notes/Mode-transfer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Mode-transfer/</guid>
      <description>The operating system must provide a way to safely transfer between user mode and kernel mode.</description>
    </item>
    
    <item>
      <title>Movies</title>
      <link>https://azure-wings.github.io/wiki/index/Movies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/index/Movies/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Multilinear form</title>
      <link>https://azure-wings.github.io/wiki/notes/Multilinear-form/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Multilinear-form/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Norm</title>
      <link>https://azure-wings.github.io/wiki/notes/Norm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Norm/</guid>
      <description>Intuition WIP
Definition A function $|\cdot|: V\to \mathbb{R}$ is a norm if it satisfies the followings:</description>
    </item>
    
    <item>
      <title>Operating systems</title>
      <link>https://azure-wings.github.io/wiki/notes/Operating-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Operating-systems/</guid>
      <description>Kernels and processes   Process  Dual-mode operation  Mode transfer   Implementation of mode transfer  x86 Mode transfer    </description>
    </item>
    
    <item>
      <title>Parsers</title>
      <link>https://azure-wings.github.io/wiki/notes/Parsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Parsers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Performance</title>
      <link>https://azure-wings.github.io/wiki/notes/Performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Performance/</guid>
      <description>Defining Performance  Response time (execution time): The time between start and completion of a task Throughput (Bandwidth): The number of tasks completed per unit time  Measuring Performance  Clock cycle (s): The time for one clock period (usually the processor clock) - constant Clock rate (Hz): The inverse of clock period CPU execution time: The time CPU spends computing for a certain task (does not include time spent waiting for I/O or running other programs) $$ \begin{align*} \text{CPU time} &amp;amp;= \text{CPU clock cycles} \times \text{Clock cycle time}\ &amp;amp;= \frac{\text{CPU clock cycles}}{\text{Clock rate}} \end{align*} $$ CPI (Clock cycles per instruction): The average number of clock cycles per instruction for a program or program fragment.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://azure-wings.github.io/wiki/notes/Process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Process/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Programming language theory</title>
      <link>https://azure-wings.github.io/wiki/notes/Programming-language-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Programming-language-theory/</guid>
      <description>Programming language theory (PLT) is a branch of computer science that deals with the design, implementation, analysis, characterization, and classification of formal languages known as programming languages and of their individual features.</description>
    </item>
    
    <item>
      <title>Properties of determinant</title>
      <link>https://azure-wings.github.io/wiki/notes/Properties-of-determinant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Properties-of-determinant/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Semantics</title>
      <link>https://azure-wings.github.io/wiki/notes/Semantics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Semantics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Set theory</title>
      <link>https://azure-wings.github.io/wiki/notes/Set-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Set-theory/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Subspace</title>
      <link>https://azure-wings.github.io/wiki/notes/Subspace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Subspace/</guid>
      <description>Definition  Let $V$ be a vector space over the field $F$.</description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>https://azure-wings.github.io/wiki/notes/Syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Syntax/</guid>
      <description>Syntax of a programming language decides the apprearance of the language.</description>
    </item>
    
    <item>
      <title>Topology</title>
      <link>https://azure-wings.github.io/wiki/notes/Topology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Topology/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vector space</title>
      <link>https://azure-wings.github.io/wiki/notes/Vector-space/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/Vector-space/</guid>
      <description>Definition A vector space $V$ over a field $F$ consists of a set on which two operations $+$ (addition) and $\cdot$ (scalar multiplication) are defined so that the followings hold.</description>
    </item>
    
    <item>
      <title>x86 Mode Transfer</title>
      <link>https://azure-wings.github.io/wiki/notes/x86-Mode-Transfer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://azure-wings.github.io/wiki/notes/x86-Mode-Transfer/</guid>
      <description>Background on x86 Architecture </description>
    </item>
    
  </channel>
</rss>
